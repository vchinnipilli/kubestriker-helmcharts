NAME: kubestriker
LAST DEPLOYED: Wed May  5 14:18:46 2021
NAMESPACE: smp-dev-di1001
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: kubestriker/templates/db-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    name: kubestriker
    app: kubestriker
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: 
  selector:
    app: kubestriker
    component: database
---
# Source: kubestriker/templates/fe-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fe-svc
  labels:
    name: kubestriker
    app: kubestriker-fe
    component: frontend-server
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 80
      protocol: TCP
      name: ks-fe-svc
  selector:
    app: kubestriker-fe}
    component: frontend-server
---
# Source: kubestriker/templates/python-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: python-svc
  labels:
    name: kubestriker
    app: kubestriker
    component: server
spec:
  type: ClusterIP
  ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: python-svc
  selector:
    app: kubestriker
    component: server
---
# Source: kubestriker/templates/db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubestriker-db
  labels:
    release: kubestriker
    app: kubestriker
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      release: kubestriker
      app: kubestriker
      component: database
      hasDNS: "true"
  template:
    metadata:
      labels:
        release: kubestriker
        app: kubestriker
        component: database
        hasDNS: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: kubestriker
                  release: kubestriker
                  component: database
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      volumes:
        - name: kubestriker-db-storage
          emptyDir: {}
      containers:
        - name: kubestriker-db
          image: "amazon/dynamodb-local:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMSESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DYNAMODB_ACCESS_KEY_ID
              value: anything
            - name: DYNAMODB_ACCESS_KEY
              value: anything
            - name: DYNAMODB_REGION
              value: ap-southeast-2
          ports:
            - name: db-service
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: kubestriker-db-storage
              mountPath: /data
              subPath: data
---
# Source: kubestriker/templates/fe-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fe-svc
  labels:
    release: kubestriker
    app: kubestriker
    component: frontend-server
spec:
  replicas: 1
  selector:
    matchLabels:
      release: kubestriker
      app: kubestriker
      component: frontend-server
  template:
    metadata:
      labels:
        release: kubestriker
        app: kubestriker
        component: frontend-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: kubestriker
                  release: kubestriker
                  component: frontend-server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      volumes:
        - name: kubestriker-python-storage
          emptyDir: {}
      containers:
        - name: kubestriker-fe
          image: "cloudsecguy/kubestrikerfe:env3"
          imagePullPolicy: IfNotPresent
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMSESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: API_URL
              value: http://a805ccee0d51e407883d704b6e684dd2-1053467523.ap-southeast-2.elb.amazonaws.com/
          ports:
            - name: fe-svc
              containerPort: 80
              protocol: TCP
            - name: python-server
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: kubestriker-python-storage
              mountPath: /data
              subPath: data
---
# Source: kubestriker/templates/python-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubestriker-python
  labels:
    release: kubestriker
    app: kubestriker
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      release: kubestriker
      app: kubestriker
      component: server
  template:
    metadata:
      labels:
        release: kubestriker
        app: kubestriker
        component: server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: kubestriker
                  release: kubestriker
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      volumes:
        - name: kubestriker-python-storage
          emptyDir: {}
      containers:
        - name: kubestriker-python
          image: ""
          imagePullPolicy: IfNotPresent
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMSESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DYNAMODB_URL
              value: http://$(DB_SERVICE_NEW_SERVICE_HOST):$(DB_SERVICE_NEW_SERVICE_PORT)
            - name: DYNAMODB_ACCESS_KEY_ID
              value: anything
            - name: DYNAMODB_ACCESS_KEY
              value: anything
            - name: DYNAMODB_REGION
              value: ap-southeast-2
          ports:
            - name: python-svc
              containerPort: 8888
              protocol: TCP
            - name: db-expose
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: kubestriker-python-storage
              mountPath: /data
              subPath: data
---
# Source: kubestriker/templates/backend-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backend-ingress
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, PUT, POST, DELETE, PATCH, OPTIONS
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: python-svc
            servicePort: 8888

