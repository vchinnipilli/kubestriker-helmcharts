apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.server.name }}
  labels:
    release: {{ .Values.global.appname }}
    app: {{ .Values.global.appname }}
    component: {{ .Values.db.componentname }}
spec:
  replicas: {{ .Values.db.server.replicas }}
  selector:
    matchLabels:
      release: {{ .Values.global.appname }}
      app: {{ .Values.global.appname }}
      component: {{ .Values.db.componentname }}
      hasDNS: "true"
  template:
    metadata:
      labels:
        release: {{ .Values.global.appname }}
        app: {{ .Values.global.appname }}
        component: {{ .Values.db.componentname }}
        hasDNS: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ .Values.global.appname }}
                  release: {{ .Values.global.appname }}
                  component: {{ .Values.db.componentname }}
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      volumes:
        - name: kubestriker-db-storage
          emptyDir: {}
      containers:
        - name: {{ .Values.db.server.image.name }}
          image: "{{ .Values.db.server.image.repository }}"
          imagePullPolicy: {{ .Values.db.server.image.pullPolicy }}
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMSESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DYNAMODB_ACCESS_KEY_ID
              value: {{ .Values.db.server.env.dynamodb.access_key_id }}
            - name: DYNAMODB_ACCESS_KEY
              value: {{ .Values.db.server.env.dynamodb.secret_access_key }}
            - name: DYNAMODB_REGION
              value: {{ .Values.db.server.env.dynamodb.region }}
          ports:
            - name: {{ .Values.db.service.name }}
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: kubestriker-db-storage
              mountPath: /data
              subPath: data



